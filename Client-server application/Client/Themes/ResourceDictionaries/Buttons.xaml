<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Client.Themes.ResourceDictionaries">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Palette.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightThemeText}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" CornerRadius="5" BorderThickness="1.5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource LightThemeButton}"/>
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightThemeDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource LightThemeDisabledText}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightThemePressed}"/>
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Binding="{Binding IsLightTheme}" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DarkThemeText}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource LightThemeText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" BorderThickness="1.5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.Background>
                            <SolidColorBrush Color="{StaticResource LightThemeButton}"/>
                        </Border.Background>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightThemeDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource LightThemeDisabledText}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightThemePressed}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>